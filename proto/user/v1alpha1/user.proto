syntax = "proto3";

package user.v1alpha1;

import "google/protobuf/timestamp.proto";

option go_package = "user/v1alpha1";

service UserService {
  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse);
  rpc GetUser(GetUserRequest) returns (GetUserResponse);
  rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse);
  rpc DeleteUser(DeleteUserRequest) returns (DeleteUserResponse);
  rpc ListUsers(ListUsersRequest) returns (ListUsersResponse);
}

message User {
  int32 id = 1;
  string username = 2;
  string firstname = 3;
  string lastname = 4;
  Gender gender = 5;
  string lineid = 6;
  string banknumber = 7;
  google.protobuf.Timestamp created_at = 8;
  google.protobuf.Timestamp updated_at = 9;
  UserStatus status = 10;
  int32 bank_categories_id = 11;
  int32 ways_id = 12;
  int32 wallets_id = 13;
  UserRole role = 14;
  string line_user_id = 15;
  string affiliate_id = 16;
  string rank = 17;
  double point = 18;
  double exp = 19;
  string dob = 20;
  Wallet wallet = 21; // Added Wallet reference
}

message Wallet {
  int32 id = 1;
  double balance = 2;
  string status = 3;
  google.protobuf.Timestamp created_at = 4;
  google.protobuf.Timestamp updated_at = 5;
  double turnover = 6;
  double point = 7;
  int32 promotion_id = 8;
  int32 user_promotion_id = 9;
  double deposit_turnover = 10;
  double deposit_turnover_counter = 11;
}

enum Gender {
  GENDER_UNSPECIFIED = 0;
  GENDER_MALE = 1;
  GENDER_FEMALE = 2;
  GENDER_API = 3;
}

enum UserStatus {
  USER_STATUS_UNSPECIFIED = 0;
  USER_STATUS_ACTIVE = 1;
  USER_STATUS_BAN = 2;
}

enum UserRole {
  USER_ROLE_UNSPECIFIED = 0;
  USER_ROLE_MEMBER = 1;
  USER_ROLE_VIP = 2;
  USER_ROLE_FREE = 3;
  USER_ROLE_ADMIN = 4;
  USER_ROLE_FREE_OUT = 5;
  USER_ROLE_SUPERADMIN = 6;
  USER_ROLE_PARTNER = 7;
  USER_ROLE_SUBADMIN = 8;
  USER_ROLE_DEPOSIT_ADMIN = 9;
  USER_ROLE_WITHDRAW_ADMIN = 10;
}

message CreateUserRequest {
  User user = 1;
}

message CreateUserResponse {
  User user = 1;
}

message GetUserRequest {
  string username = 1;
}

message GetUserResponse {
  User user = 1;
}

message UpdateUserRequest {
  User user = 1;
}

message UpdateUserResponse {
  User user = 1;
}

message DeleteUserRequest {
  int32 id = 1;
}

message DeleteUserResponse {
  bool success = 1;
}

message ListUsersRequest {
  int32 page = 1;
  int32 page_size = 2;
}

message ListUsersResponse {
  repeated User users = 1;
  int32 total_count = 2;
}
