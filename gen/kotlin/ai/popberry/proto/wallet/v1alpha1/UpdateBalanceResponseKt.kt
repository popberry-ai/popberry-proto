// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: wallet/v1alpha1/wallet.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package ai.popberry.proto.wallet.v1alpha1;

@kotlin.jvm.JvmName("-initializeupdateBalanceResponse")
public inline fun updateBalanceResponse(block: ai.popberry.proto.wallet.v1alpha1.UpdateBalanceResponseKt.Dsl.() -> kotlin.Unit): ai.popberry.proto.wallet.v1alpha1.UpdateBalanceResponse =
  ai.popberry.proto.wallet.v1alpha1.UpdateBalanceResponseKt.Dsl._create(ai.popberry.proto.wallet.v1alpha1.UpdateBalanceResponse.newBuilder()).apply { block() }._build()
/**
 * ```
 * Response message for updating wallet balance
 * ```
 *
 * Protobuf type `wallet.v1alpha1.UpdateBalanceResponse`
 */
public object UpdateBalanceResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: ai.popberry.proto.wallet.v1alpha1.UpdateBalanceResponse.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: ai.popberry.proto.wallet.v1alpha1.UpdateBalanceResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): ai.popberry.proto.wallet.v1alpha1.UpdateBalanceResponse = _builder.build()

    /**
     * ```
     * Indicates if the operation was successful
     * ```
     *
     * `bool success = 1 [json_name = "success"];`
     */
    public var success: kotlin.Boolean
      @kotlin.jvm.JvmName("getSuccess")
        get() = _builder.success
      @kotlin.jvm.JvmName("setSuccess")
        set(value) {
        _builder.success = value
      }
    /**
     * <pre>
     * Indicates if the operation was successful
     * </pre>
     *
     * <code>bool success = 1 [json_name = "success"];</code>
     * @return This builder for chaining.
     */
    public fun clearSuccess() {
      _builder.clearSuccess()
    }

    /**
     * ```
     * MongoDB ObjectId as a string
     * ```
     *
     * `string transaction_id = 2 [json_name = "transactionId"];`
     */
    public var transactionId: kotlin.String
      @kotlin.jvm.JvmName("getTransactionId")
        get() = _builder.transactionId
      @kotlin.jvm.JvmName("setTransactionId")
        set(value) {
        _builder.transactionId = value
      }
    /**
     * <pre>
     * MongoDB ObjectId as a string
     * </pre>
     *
     * <code>string transaction_id = 2 [json_name = "transactionId"];</code>
     * @return This builder for chaining.
     */
    public fun clearTransactionId() {
      _builder.clearTransactionId()
    }

    /**
     * ```
     * Balance before the transaction
     * ```
     *
     * `double before = 3 [json_name = "before"];`
     */
    public var before: kotlin.Double
      @kotlin.jvm.JvmName("getBefore")
        get() = _builder.before
      @kotlin.jvm.JvmName("setBefore")
        set(value) {
        _builder.before = value
      }
    /**
     * <pre>
     * Balance before the transaction
     * </pre>
     *
     * <code>double before = 3 [json_name = "before"];</code>
     * @return This builder for chaining.
     */
    public fun clearBefore() {
      _builder.clearBefore()
    }

    /**
     * ```
     * Transaction amount
     * ```
     *
     * `double amount = 4 [json_name = "amount"];`
     */
    public var amount: kotlin.Double
      @kotlin.jvm.JvmName("getAmount")
        get() = _builder.amount
      @kotlin.jvm.JvmName("setAmount")
        set(value) {
        _builder.amount = value
      }
    /**
     * <pre>
     * Transaction amount
     * </pre>
     *
     * <code>double amount = 4 [json_name = "amount"];</code>
     * @return This builder for chaining.
     */
    public fun clearAmount() {
      _builder.clearAmount()
    }

    /**
     * ```
     * Balance after the transaction
     * ```
     *
     * `double after = 5 [json_name = "after"];`
     */
    public var after: kotlin.Double
      @kotlin.jvm.JvmName("getAfter")
        get() = _builder.after
      @kotlin.jvm.JvmName("setAfter")
        set(value) {
        _builder.after = value
      }
    /**
     * <pre>
     * Balance after the transaction
     * </pre>
     *
     * <code>double after = 5 [json_name = "after"];</code>
     * @return This builder for chaining.
     */
    public fun clearAfter() {
      _builder.clearAfter()
    }

    /**
     * ```
     * Optional message for additional information
     * ```
     *
     * `string message = 6 [json_name = "message"];`
     */
    public var message: kotlin.String
      @kotlin.jvm.JvmName("getMessage")
        get() = _builder.message
      @kotlin.jvm.JvmName("setMessage")
        set(value) {
        _builder.message = value
      }
    /**
     * <pre>
     * Optional message for additional information
     * </pre>
     *
     * <code>string message = 6 [json_name = "message"];</code>
     * @return This builder for chaining.
     */
    public fun clearMessage() {
      _builder.clearMessage()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun ai.popberry.proto.wallet.v1alpha1.UpdateBalanceResponse.copy(block: `ai.popberry.proto.wallet.v1alpha1`.UpdateBalanceResponseKt.Dsl.() -> kotlin.Unit): ai.popberry.proto.wallet.v1alpha1.UpdateBalanceResponse =
  `ai.popberry.proto.wallet.v1alpha1`.UpdateBalanceResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()

