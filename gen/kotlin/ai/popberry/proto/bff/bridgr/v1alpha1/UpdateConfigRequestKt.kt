// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: bff/bridgr/v1alpha1/service.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package ai.popberry.proto.bff.bridgr.v1alpha1;

@kotlin.jvm.JvmName("-initializeupdateConfigRequest")
public inline fun updateConfigRequest(block: ai.popberry.proto.bff.bridgr.v1alpha1.UpdateConfigRequestKt.Dsl.() -> kotlin.Unit): ai.popberry.proto.bff.bridgr.v1alpha1.UpdateConfigRequest =
  ai.popberry.proto.bff.bridgr.v1alpha1.UpdateConfigRequestKt.Dsl._create(ai.popberry.proto.bff.bridgr.v1alpha1.UpdateConfigRequest.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `bff.bridgr.v1alpha1.UpdateConfigRequest`
 */
public object UpdateConfigRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: ai.popberry.proto.bff.bridgr.v1alpha1.UpdateConfigRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: ai.popberry.proto.bff.bridgr.v1alpha1.UpdateConfigRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): ai.popberry.proto.bff.bridgr.v1alpha1.UpdateConfigRequest = _builder.build()

    /**
     * `string device_token = 1 [json_name = "deviceToken"];`
     */
    public var deviceToken: kotlin.String
      @kotlin.jvm.JvmName("getDeviceToken")
        get() = _builder.deviceToken
      @kotlin.jvm.JvmName("setDeviceToken")
        set(value) {
        _builder.deviceToken = value
      }
    /**
     * <code>string device_token = 1 [json_name = "deviceToken"];</code>
     * @return This builder for chaining.
     */
    public fun clearDeviceToken() {
      _builder.clearDeviceToken()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class ConfigProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * `map<string, string> config = 2 [json_name = "config"];`
     */
     public val config: com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, ConfigProxy>
      @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("getConfigMap")
      get() = com.google.protobuf.kotlin.DslMap(
        _builder.configMap
      )
    /**
     * `map<string, string> config = 2 [json_name = "config"];`
     */
    @kotlin.jvm.JvmName("putConfig")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, ConfigProxy>
      .put(key: kotlin.String, value: kotlin.String) {
         _builder.putConfig(key, value)
       }
    /**
     * `map<string, string> config = 2 [json_name = "config"];`
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("setConfig")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, ConfigProxy>
      .set(key: kotlin.String, value: kotlin.String) {
         put(key, value)
       }
    /**
     * `map<string, string> config = 2 [json_name = "config"];`
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("removeConfig")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, ConfigProxy>
      .remove(key: kotlin.String) {
         _builder.removeConfig(key)
       }
    /**
     * `map<string, string> config = 2 [json_name = "config"];`
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("putAllConfig")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, ConfigProxy>
      .putAll(map: kotlin.collections.Map<kotlin.String, kotlin.String>) {
         _builder.putAllConfig(map)
       }
    /**
     * `map<string, string> config = 2 [json_name = "config"];`
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("clearConfig")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, ConfigProxy>
      .clear() {
         _builder.clearConfig()
       }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun ai.popberry.proto.bff.bridgr.v1alpha1.UpdateConfigRequest.copy(block: `ai.popberry.proto.bff.bridgr.v1alpha1`.UpdateConfigRequestKt.Dsl.() -> kotlin.Unit): ai.popberry.proto.bff.bridgr.v1alpha1.UpdateConfigRequest =
  `ai.popberry.proto.bff.bridgr.v1alpha1`.UpdateConfigRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

