// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: bff/bridgr/config/v1alpha1/enum.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package ai.popberry.proto.bff.bridgr.config.v1alpha1;

@kotlin.jvm.JvmName("-initializeupdateConfigRequest")
public inline fun updateConfigRequest(block: ai.popberry.proto.bff.bridgr.config.v1alpha1.UpdateConfigRequestKt.Dsl.() -> kotlin.Unit): ai.popberry.proto.bff.bridgr.config.v1alpha1.UpdateConfigRequest =
  ai.popberry.proto.bff.bridgr.config.v1alpha1.UpdateConfigRequestKt.Dsl._create(ai.popberry.proto.bff.bridgr.config.v1alpha1.UpdateConfigRequest.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `bff.bridgr.config.v1alpha1.UpdateConfigRequest`
 */
public object UpdateConfigRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: ai.popberry.proto.bff.bridgr.config.v1alpha1.UpdateConfigRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: ai.popberry.proto.bff.bridgr.config.v1alpha1.UpdateConfigRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): ai.popberry.proto.bff.bridgr.config.v1alpha1.UpdateConfigRequest = _builder.build()

    /**
     * `string device_id = 1 [json_name = "deviceId"];`
     */
    public var deviceId: kotlin.String
      @kotlin.jvm.JvmName("getDeviceId")
        get() = _builder.deviceId
      @kotlin.jvm.JvmName("setDeviceId")
        set(value) {
        _builder.deviceId = value
      }
    /**
     * <code>string device_id = 1 [json_name = "deviceId"];</code>
     * @return This builder for chaining.
     */
    public fun clearDeviceId() {
      _builder.clearDeviceId()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class ConfigsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * `repeated .bff.bridgr.config.v1alpha1.ConfigData configs = 2 [json_name = "configs"];`
     */
     public val configs: com.google.protobuf.kotlin.DslList<ai.popberry.proto.bff.bridgr.config.v1alpha1.ConfigData, ConfigsProxy>
      @kotlin.jvm.JvmSynthetic
  get() = com.google.protobuf.kotlin.DslList(
        _builder.configsList
      )
    /**
     * <code>repeated .bff.bridgr.config.v1alpha1.ConfigData configs = 2 [json_name = "configs"];</code>
     * @param value The configs to add.
     * @return This builder for chaining.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("addConfigs")
    public fun com.google.protobuf.kotlin.DslList<ai.popberry.proto.bff.bridgr.config.v1alpha1.ConfigData, ConfigsProxy>.add(value: ai.popberry.proto.bff.bridgr.config.v1alpha1.ConfigData) {
      _builder.addConfigs(value)
    }
    /**
     * <code>repeated .bff.bridgr.config.v1alpha1.ConfigData configs = 2 [json_name = "configs"];</code>
     * @param value The configs to add.
     * @return This builder for chaining.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("plusAssignConfigs")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<ai.popberry.proto.bff.bridgr.config.v1alpha1.ConfigData, ConfigsProxy>.plusAssign(value: ai.popberry.proto.bff.bridgr.config.v1alpha1.ConfigData) {
      add(value)
    }
    /**
     * <code>repeated .bff.bridgr.config.v1alpha1.ConfigData configs = 2 [json_name = "configs"];</code>
     * @param values The configs to add.
     * @return This builder for chaining.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("addAllConfigs")
    public fun com.google.protobuf.kotlin.DslList<ai.popberry.proto.bff.bridgr.config.v1alpha1.ConfigData, ConfigsProxy>.addAll(values: kotlin.collections.Iterable<ai.popberry.proto.bff.bridgr.config.v1alpha1.ConfigData>) {
      _builder.addAllConfigs(values)
    }
    /**
     * <code>repeated .bff.bridgr.config.v1alpha1.ConfigData configs = 2 [json_name = "configs"];</code>
     * @param values The configs to add.
     * @return This builder for chaining.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("plusAssignAllConfigs")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<ai.popberry.proto.bff.bridgr.config.v1alpha1.ConfigData, ConfigsProxy>.plusAssign(values: kotlin.collections.Iterable<ai.popberry.proto.bff.bridgr.config.v1alpha1.ConfigData>) {
      addAll(values)
    }
    /**
     * <code>repeated .bff.bridgr.config.v1alpha1.ConfigData configs = 2 [json_name = "configs"];</code>
     * @param index The index to set the value at.
     * @param value The configs to set.
     * @return This builder for chaining.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("setConfigs")
    public operator fun com.google.protobuf.kotlin.DslList<ai.popberry.proto.bff.bridgr.config.v1alpha1.ConfigData, ConfigsProxy>.set(index: kotlin.Int, value: ai.popberry.proto.bff.bridgr.config.v1alpha1.ConfigData) {
      _builder.setConfigs(index, value)
    }
    /**
     * <code>repeated .bff.bridgr.config.v1alpha1.ConfigData configs = 2 [json_name = "configs"];</code>
     * @return This builder for chaining.
     */
    @kotlin.jvm.JvmSynthetic
@kotlin.jvm.JvmName("clearConfigs")
    public fun com.google.protobuf.kotlin.DslList<ai.popberry.proto.bff.bridgr.config.v1alpha1.ConfigData, ConfigsProxy>.clear() {
      _builder.clearConfigs()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun ai.popberry.proto.bff.bridgr.config.v1alpha1.UpdateConfigRequest.copy(block: `ai.popberry.proto.bff.bridgr.config.v1alpha1`.UpdateConfigRequestKt.Dsl.() -> kotlin.Unit): ai.popberry.proto.bff.bridgr.config.v1alpha1.UpdateConfigRequest =
  `ai.popberry.proto.bff.bridgr.config.v1alpha1`.UpdateConfigRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

