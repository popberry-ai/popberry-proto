// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: bff/bridgr/record/v1alpha1/message.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package ai.popberry.proto.bff.bridgr.record.v1alpha1;

@kotlin.jvm.JvmName("-initializesendRecordRequest")
public inline fun sendRecordRequest(block: ai.popberry.proto.bff.bridgr.record.v1alpha1.SendRecordRequestKt.Dsl.() -> kotlin.Unit): ai.popberry.proto.bff.bridgr.record.v1alpha1.SendRecordRequest =
  ai.popberry.proto.bff.bridgr.record.v1alpha1.SendRecordRequestKt.Dsl._create(ai.popberry.proto.bff.bridgr.record.v1alpha1.SendRecordRequest.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `bff.bridgr.record.v1alpha1.SendRecordRequest`
 */
public object SendRecordRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: ai.popberry.proto.bff.bridgr.record.v1alpha1.SendRecordRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: ai.popberry.proto.bff.bridgr.record.v1alpha1.SendRecordRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): ai.popberry.proto.bff.bridgr.record.v1alpha1.SendRecordRequest = _builder.build()

    /**
     * `string device_token = 1 [json_name = "deviceToken"];`
     */
    public var deviceToken: kotlin.String
      @kotlin.jvm.JvmName("getDeviceToken")
        get() = _builder.deviceToken
      @kotlin.jvm.JvmName("setDeviceToken")
        set(value) {
        _builder.deviceToken = value
      }
    /**
     * <code>string device_token = 1 [json_name = "deviceToken"];</code>
     * @return This builder for chaining.
     */
    public fun clearDeviceToken() {
      _builder.clearDeviceToken()
    }

    /**
     * `.bff.bridgr.record.v1alpha1.Record record = 2 [json_name = "record"];`
     */
    public var record: ai.popberry.proto.bff.bridgr.record.v1alpha1.Record
      @kotlin.jvm.JvmName("getRecord")
        get() = _builder.record
      @kotlin.jvm.JvmName("setRecord")
        set(value) {
        _builder.record = value
      }
    /**
     * <code>.bff.bridgr.record.v1alpha1.Record record = 2 [json_name = "record"];</code>
     * @return This builder for chaining.
     */
    public fun clearRecord() {
      _builder.clearRecord()
    }
    /**
     * <code>.bff.bridgr.record.v1alpha1.Record record = 2 [json_name = "record"];</code>
     * @return Whether the record field is set.
     * @return This builder for chaining.
     */
    public fun hasRecord(): kotlin.Boolean {
      return _builder.hasRecord()
    }

    public val SendRecordRequestKt.Dsl.recordOrNull: ai.popberry.proto.bff.bridgr.record.v1alpha1.Record?
      get() = _builder.recordOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun ai.popberry.proto.bff.bridgr.record.v1alpha1.SendRecordRequest.copy(block: `ai.popberry.proto.bff.bridgr.record.v1alpha1`.SendRecordRequestKt.Dsl.() -> kotlin.Unit): ai.popberry.proto.bff.bridgr.record.v1alpha1.SendRecordRequest =
  `ai.popberry.proto.bff.bridgr.record.v1alpha1`.SendRecordRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val ai.popberry.proto.bff.bridgr.record.v1alpha1.SendRecordRequestOrBuilder.recordOrNull: ai.popberry.proto.bff.bridgr.record.v1alpha1.Record?
  get() = if (hasRecord()) getRecord() else null

