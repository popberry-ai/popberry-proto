// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: bff/bridgr/record/v1alpha1/message.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package ai.popberry.proto.bff.bridgr.record.v1alpha1;

@kotlin.jvm.JvmName("-initializerawRecord")
public inline fun rawRecord(block: ai.popberry.proto.bff.bridgr.record.v1alpha1.RawRecordKt.Dsl.() -> kotlin.Unit): ai.popberry.proto.bff.bridgr.record.v1alpha1.RawRecord =
  ai.popberry.proto.bff.bridgr.record.v1alpha1.RawRecordKt.Dsl._create(ai.popberry.proto.bff.bridgr.record.v1alpha1.RawRecord.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `bff.bridgr.record.v1alpha1.RawRecord`
 */
public object RawRecordKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: ai.popberry.proto.bff.bridgr.record.v1alpha1.RawRecord.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: ai.popberry.proto.bff.bridgr.record.v1alpha1.RawRecord.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): ai.popberry.proto.bff.bridgr.record.v1alpha1.RawRecord = _builder.build()

    /**
     * `string source = 1 [json_name = "source"];`
     */
    public var source: kotlin.String
      @kotlin.jvm.JvmName("getSource")
        get() = _builder.source
      @kotlin.jvm.JvmName("setSource")
        set(value) {
        _builder.source = value
      }
    /**
     * <code>string source = 1 [json_name = "source"];</code>
     * @return This builder for chaining.
     */
    public fun clearSource() {
      _builder.clearSource()
    }

    /**
     * `string sender = 2 [json_name = "sender"];`
     */
    public var sender: kotlin.String
      @kotlin.jvm.JvmName("getSender")
        get() = _builder.sender
      @kotlin.jvm.JvmName("setSender")
        set(value) {
        _builder.sender = value
      }
    /**
     * <code>string sender = 2 [json_name = "sender"];</code>
     * @return This builder for chaining.
     */
    public fun clearSender() {
      _builder.clearSender()
    }

    /**
     * `string header = 3 [json_name = "header"];`
     */
    public var header: kotlin.String
      @kotlin.jvm.JvmName("getHeader")
        get() = _builder.header
      @kotlin.jvm.JvmName("setHeader")
        set(value) {
        _builder.header = value
      }
    /**
     * <code>string header = 3 [json_name = "header"];</code>
     * @return This builder for chaining.
     */
    public fun clearHeader() {
      _builder.clearHeader()
    }

    /**
     * `string body = 4 [json_name = "body"];`
     */
    public var body: kotlin.String
      @kotlin.jvm.JvmName("getBody")
        get() = _builder.body
      @kotlin.jvm.JvmName("setBody")
        set(value) {
        _builder.body = value
      }
    /**
     * <code>string body = 4 [json_name = "body"];</code>
     * @return This builder for chaining.
     */
    public fun clearBody() {
      _builder.clearBody()
    }

    /**
     * `optional string encoding_type = 5 [json_name = "encodingType"];`
     */
    public var encodingType: kotlin.String
      @kotlin.jvm.JvmName("getEncodingType")
        get() = _builder.encodingType
      @kotlin.jvm.JvmName("setEncodingType")
        set(value) {
        _builder.encodingType = value
      }
    /**
     * <code>optional string encoding_type = 5 [json_name = "encodingType"];</code>
     * @return This builder for chaining.
     */
    public fun clearEncodingType() {
      _builder.clearEncodingType()
    }
    /**
     * <code>optional string encoding_type = 5 [json_name = "encodingType"];</code>
     * @return Whether the encodingType field is set.
     * @return This builder for chaining.
     */
    public fun hasEncodingType(): kotlin.Boolean {
      return _builder.hasEncodingType()
    }

    /**
     * `.google.protobuf.Timestamp timestamp = 6 [json_name = "timestamp"];`
     */
    public var timestamp: com.google.protobuf.Timestamp
      @kotlin.jvm.JvmName("getTimestamp")
        get() = _builder.timestamp
      @kotlin.jvm.JvmName("setTimestamp")
        set(value) {
        _builder.timestamp = value
      }
    /**
     * <code>.google.protobuf.Timestamp timestamp = 6 [json_name = "timestamp"];</code>
     * @return This builder for chaining.
     */
    public fun clearTimestamp() {
      _builder.clearTimestamp()
    }
    /**
     * <code>.google.protobuf.Timestamp timestamp = 6 [json_name = "timestamp"];</code>
     * @return Whether the timestamp field is set.
     * @return This builder for chaining.
     */
    public fun hasTimestamp(): kotlin.Boolean {
      return _builder.hasTimestamp()
    }

    public val RawRecordKt.Dsl.timestampOrNull: com.google.protobuf.Timestamp?
      get() = _builder.timestampOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun ai.popberry.proto.bff.bridgr.record.v1alpha1.RawRecord.copy(block: `ai.popberry.proto.bff.bridgr.record.v1alpha1`.RawRecordKt.Dsl.() -> kotlin.Unit): ai.popberry.proto.bff.bridgr.record.v1alpha1.RawRecord =
  `ai.popberry.proto.bff.bridgr.record.v1alpha1`.RawRecordKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val ai.popberry.proto.bff.bridgr.record.v1alpha1.RawRecordOrBuilder.timestampOrNull: com.google.protobuf.Timestamp?
  get() = if (hasTimestamp()) getTimestamp() else null

