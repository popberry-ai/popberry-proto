// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: bff/bridgr/record/v1alpha1/message.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package ai.popberry.proto.bff.bridgr.record.v1alpha1;

@kotlin.jvm.JvmName("-initializesendRecordResponse")
public inline fun sendRecordResponse(block: ai.popberry.proto.bff.bridgr.record.v1alpha1.SendRecordResponseKt.Dsl.() -> kotlin.Unit): ai.popberry.proto.bff.bridgr.record.v1alpha1.SendRecordResponse =
  ai.popberry.proto.bff.bridgr.record.v1alpha1.SendRecordResponseKt.Dsl._create(ai.popberry.proto.bff.bridgr.record.v1alpha1.SendRecordResponse.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `bff.bridgr.record.v1alpha1.SendRecordResponse`
 */
public object SendRecordResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: ai.popberry.proto.bff.bridgr.record.v1alpha1.SendRecordResponse.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: ai.popberry.proto.bff.bridgr.record.v1alpha1.SendRecordResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): ai.popberry.proto.bff.bridgr.record.v1alpha1.SendRecordResponse = _builder.build()

    /**
     * `string record_id = 1 [json_name = "recordId"];`
     */
    public var recordId: kotlin.String
      @kotlin.jvm.JvmName("getRecordId")
        get() = _builder.recordId
      @kotlin.jvm.JvmName("setRecordId")
        set(value) {
        _builder.recordId = value
      }
    /**
     * <code>string record_id = 1 [json_name = "recordId"];</code>
     * @return This builder for chaining.
     */
    public fun clearRecordId() {
      _builder.clearRecordId()
    }

    /**
     * `bool success = 2 [json_name = "success"];`
     */
    public var success: kotlin.Boolean
      @kotlin.jvm.JvmName("getSuccess")
        get() = _builder.success
      @kotlin.jvm.JvmName("setSuccess")
        set(value) {
        _builder.success = value
      }
    /**
     * <code>bool success = 2 [json_name = "success"];</code>
     * @return This builder for chaining.
     */
    public fun clearSuccess() {
      _builder.clearSuccess()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun ai.popberry.proto.bff.bridgr.record.v1alpha1.SendRecordResponse.copy(block: `ai.popberry.proto.bff.bridgr.record.v1alpha1`.SendRecordResponseKt.Dsl.() -> kotlin.Unit): ai.popberry.proto.bff.bridgr.record.v1alpha1.SendRecordResponse =
  `ai.popberry.proto.bff.bridgr.record.v1alpha1`.SendRecordResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()

