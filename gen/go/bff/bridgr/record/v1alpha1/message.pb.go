// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: bff/bridgr/record/v1alpha1/message.proto

package recordv1alpha1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Type int32

const (
	Type_TYPE_UNSPECIFIED  Type = 0
	Type_TYPE_SMS          Type = 1
	Type_TYPE_NOTIFICATION Type = 2
)

// Enum value maps for Type.
var (
	Type_name = map[int32]string{
		0: "TYPE_UNSPECIFIED",
		1: "TYPE_SMS",
		2: "TYPE_NOTIFICATION",
	}
	Type_value = map[string]int32{
		"TYPE_UNSPECIFIED":  0,
		"TYPE_SMS":          1,
		"TYPE_NOTIFICATION": 2,
	}
)

func (x Type) Enum() *Type {
	p := new(Type)
	*p = x
	return p
}

func (x Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Type) Descriptor() protoreflect.EnumDescriptor {
	return file_bff_bridgr_record_v1alpha1_message_proto_enumTypes[0].Descriptor()
}

func (Type) Type() protoreflect.EnumType {
	return &file_bff_bridgr_record_v1alpha1_message_proto_enumTypes[0]
}

func (x Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Type.Descriptor instead.
func (Type) EnumDescriptor() ([]byte, []int) {
	return file_bff_bridgr_record_v1alpha1_message_proto_rawDescGZIP(), []int{0}
}

type Status int32

const (
	Status_STATUS_UNSPECIFIED Status = 0
	Status_STATUS_HEALTHY     Status = 1
	Status_STATUS_UNHEALTHY   Status = 2
)

// Enum value maps for Status.
var (
	Status_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "STATUS_HEALTHY",
		2: "STATUS_UNHEALTHY",
	}
	Status_value = map[string]int32{
		"STATUS_UNSPECIFIED": 0,
		"STATUS_HEALTHY":     1,
		"STATUS_UNHEALTHY":   2,
	}
)

func (x Status) Enum() *Status {
	p := new(Status)
	*p = x
	return p
}

func (x Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Status) Descriptor() protoreflect.EnumDescriptor {
	return file_bff_bridgr_record_v1alpha1_message_proto_enumTypes[1].Descriptor()
}

func (Status) Type() protoreflect.EnumType {
	return &file_bff_bridgr_record_v1alpha1_message_proto_enumTypes[1]
}

func (x Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Status.Descriptor instead.
func (Status) EnumDescriptor() ([]byte, []int) {
	return file_bff_bridgr_record_v1alpha1_message_proto_rawDescGZIP(), []int{1}
}

type Priority int32

const (
	Priority_PRIORITY_UNSPECIFIED Priority = 0
	Priority_PRIORITY_LOW         Priority = 1
	Priority_PRIORITY_MEDIUM      Priority = 2
	Priority_PRIORITY_HIGH        Priority = 3
)

// Enum value maps for Priority.
var (
	Priority_name = map[int32]string{
		0: "PRIORITY_UNSPECIFIED",
		1: "PRIORITY_LOW",
		2: "PRIORITY_MEDIUM",
		3: "PRIORITY_HIGH",
	}
	Priority_value = map[string]int32{
		"PRIORITY_UNSPECIFIED": 0,
		"PRIORITY_LOW":         1,
		"PRIORITY_MEDIUM":      2,
		"PRIORITY_HIGH":        3,
	}
)

func (x Priority) Enum() *Priority {
	p := new(Priority)
	*p = x
	return p
}

func (x Priority) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Priority) Descriptor() protoreflect.EnumDescriptor {
	return file_bff_bridgr_record_v1alpha1_message_proto_enumTypes[2].Descriptor()
}

func (Priority) Type() protoreflect.EnumType {
	return &file_bff_bridgr_record_v1alpha1_message_proto_enumTypes[2]
}

func (x Priority) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Priority.Descriptor instead.
func (Priority) EnumDescriptor() ([]byte, []int) {
	return file_bff_bridgr_record_v1alpha1_message_proto_rawDescGZIP(), []int{2}
}

type SendRecordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceToken string  `protobuf:"bytes,1,opt,name=device_token,json=deviceToken,proto3" json:"device_token,omitempty"`
	Record      *Record `protobuf:"bytes,2,opt,name=record,proto3" json:"record,omitempty"`
}

func (x *SendRecordRequest) Reset() {
	*x = SendRecordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_bridgr_record_v1alpha1_message_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendRecordRequest) ProtoMessage() {}

func (x *SendRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bff_bridgr_record_v1alpha1_message_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendRecordRequest.ProtoReflect.Descriptor instead.
func (*SendRecordRequest) Descriptor() ([]byte, []int) {
	return file_bff_bridgr_record_v1alpha1_message_proto_rawDescGZIP(), []int{0}
}

func (x *SendRecordRequest) GetDeviceToken() string {
	if x != nil {
		return x.DeviceToken
	}
	return ""
}

func (x *SendRecordRequest) GetRecord() *Record {
	if x != nil {
		return x.Record
	}
	return nil
}

type SendRecordResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecordId string `protobuf:"bytes,1,opt,name=record_id,json=recordId,proto3" json:"record_id,omitempty"`
	Success  bool   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *SendRecordResponse) Reset() {
	*x = SendRecordResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_bridgr_record_v1alpha1_message_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendRecordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendRecordResponse) ProtoMessage() {}

func (x *SendRecordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bff_bridgr_record_v1alpha1_message_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendRecordResponse.ProtoReflect.Descriptor instead.
func (*SendRecordResponse) Descriptor() ([]byte, []int) {
	return file_bff_bridgr_record_v1alpha1_message_proto_rawDescGZIP(), []int{1}
}

func (x *SendRecordResponse) GetRecordId() string {
	if x != nil {
		return x.RecordId
	}
	return ""
}

func (x *SendRecordResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type ParsedRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Recipient string                 `protobuf:"bytes,1,opt,name=recipient,proto3" json:"recipient,omitempty"`
	Title     string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Content   string                 `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	Priority  Priority               `protobuf:"varint,4,opt,name=priority,proto3,enum=bff.bridgr.record.v1alpha1.Priority" json:"priority,omitempty"`
	Metadata  map[string]string      `protobuf:"bytes,5,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *ParsedRecord) Reset() {
	*x = ParsedRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_bridgr_record_v1alpha1_message_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParsedRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParsedRecord) ProtoMessage() {}

func (x *ParsedRecord) ProtoReflect() protoreflect.Message {
	mi := &file_bff_bridgr_record_v1alpha1_message_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParsedRecord.ProtoReflect.Descriptor instead.
func (*ParsedRecord) Descriptor() ([]byte, []int) {
	return file_bff_bridgr_record_v1alpha1_message_proto_rawDescGZIP(), []int{2}
}

func (x *ParsedRecord) GetRecipient() string {
	if x != nil {
		return x.Recipient
	}
	return ""
}

func (x *ParsedRecord) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ParsedRecord) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ParsedRecord) GetPriority() Priority {
	if x != nil {
		return x.Priority
	}
	return Priority_PRIORITY_UNSPECIFIED
}

func (x *ParsedRecord) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *ParsedRecord) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type RawRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Source       string                 `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	Sender       string                 `protobuf:"bytes,2,opt,name=sender,proto3" json:"sender,omitempty"`
	Header       string                 `protobuf:"bytes,3,opt,name=header,proto3" json:"header,omitempty"`
	Body         string                 `protobuf:"bytes,4,opt,name=body,proto3" json:"body,omitempty"`
	EncodingType *string                `protobuf:"bytes,5,opt,name=encoding_type,json=encodingType,proto3,oneof" json:"encoding_type,omitempty"`
	Timestamp    *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *RawRecord) Reset() {
	*x = RawRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_bridgr_record_v1alpha1_message_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RawRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RawRecord) ProtoMessage() {}

func (x *RawRecord) ProtoReflect() protoreflect.Message {
	mi := &file_bff_bridgr_record_v1alpha1_message_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RawRecord.ProtoReflect.Descriptor instead.
func (*RawRecord) Descriptor() ([]byte, []int) {
	return file_bff_bridgr_record_v1alpha1_message_proto_rawDescGZIP(), []int{3}
}

func (x *RawRecord) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *RawRecord) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *RawRecord) GetHeader() string {
	if x != nil {
		return x.Header
	}
	return ""
}

func (x *RawRecord) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *RawRecord) GetEncodingType() string {
	if x != nil && x.EncodingType != nil {
		return *x.EncodingType
	}
	return ""
}

func (x *RawRecord) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type Record struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type   Type   `protobuf:"varint,2,opt,name=type,proto3,enum=bff.bridgr.record.v1alpha1.Type" json:"type,omitempty"`
	Status Status `protobuf:"varint,3,opt,name=status,proto3,enum=bff.bridgr.record.v1alpha1.Status" json:"status,omitempty"`
	// Types that are assignable to MessageData:
	//
	//	*Record_Parsed
	//	*Record_Raw
	MessageData isRecord_MessageData   `protobuf_oneof:"message_data"`
	Timestamp   *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *Record) Reset() {
	*x = Record{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bff_bridgr_record_v1alpha1_message_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Record) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Record) ProtoMessage() {}

func (x *Record) ProtoReflect() protoreflect.Message {
	mi := &file_bff_bridgr_record_v1alpha1_message_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Record.ProtoReflect.Descriptor instead.
func (*Record) Descriptor() ([]byte, []int) {
	return file_bff_bridgr_record_v1alpha1_message_proto_rawDescGZIP(), []int{4}
}

func (x *Record) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Record) GetType() Type {
	if x != nil {
		return x.Type
	}
	return Type_TYPE_UNSPECIFIED
}

func (x *Record) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_STATUS_UNSPECIFIED
}

func (m *Record) GetMessageData() isRecord_MessageData {
	if m != nil {
		return m.MessageData
	}
	return nil
}

func (x *Record) GetParsed() *ParsedRecord {
	if x, ok := x.GetMessageData().(*Record_Parsed); ok {
		return x.Parsed
	}
	return nil
}

func (x *Record) GetRaw() *RawRecord {
	if x, ok := x.GetMessageData().(*Record_Raw); ok {
		return x.Raw
	}
	return nil
}

func (x *Record) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type isRecord_MessageData interface {
	isRecord_MessageData()
}

type Record_Parsed struct {
	Parsed *ParsedRecord `protobuf:"bytes,4,opt,name=parsed,proto3,oneof"`
}

type Record_Raw struct {
	Raw *RawRecord `protobuf:"bytes,5,opt,name=raw,proto3,oneof"`
}

func (*Record_Parsed) isRecord_MessageData() {}

func (*Record_Raw) isRecord_MessageData() {}

var File_bff_bridgr_record_v1alpha1_message_proto protoreflect.FileDescriptor

var file_bff_bridgr_record_v1alpha1_message_proto_rawDesc = []byte{
	0x0a, 0x28, 0x62, 0x66, 0x66, 0x2f, 0x62, 0x72, 0x69, 0x64, 0x67, 0x72, 0x2f, 0x72, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1a, 0x62, 0x66, 0x66, 0x2e,
	0x62, 0x72, 0x69, 0x64, 0x67, 0x72, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x72, 0x0a, 0x11, 0x53, 0x65, 0x6e, 0x64, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x3a, 0x0a, 0x06, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x62, 0x72, 0x69, 0x64, 0x67, 0x72, 0x2e, 0x72, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x52, 0x06, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x22, 0x4b, 0x0a, 0x12, 0x53,
	0x65, 0x6e, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0xe9, 0x02, 0x0a, 0x0c, 0x50, 0x61, 0x72,
	0x73, 0x65, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x63,
	0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65,
	0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x40, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72,
	0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x62, 0x66, 0x66, 0x2e,
	0x62, 0x72, 0x69, 0x64, 0x67, 0x72, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x52,
	0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x52, 0x0a, 0x08, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x62, 0x66,
	0x66, 0x2e, 0x62, 0x72, 0x69, 0x64, 0x67, 0x72, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50, 0x61, 0x72, 0x73, 0x65, 0x64, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x38, 0x0a,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x1a, 0x3b, 0x0a, 0x0d, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0xdd, 0x01, 0x0a, 0x09, 0x52, 0x61, 0x77, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f,
	0x64, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x28,
	0x0a, 0x0d, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0c, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e,
	0x67, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x22, 0xd3, 0x02, 0x0a, 0x06, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x34, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e,
	0x62, 0x66, 0x66, 0x2e, 0x62, 0x72, 0x69, 0x64, 0x67, 0x72, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x3a, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x62, 0x72, 0x69, 0x64,
	0x67, 0x72, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x42, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x73, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x62, 0x72, 0x69, 0x64, 0x67, 0x72, 0x2e, 0x72,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50,
	0x61, 0x72, 0x73, 0x65, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x48, 0x00, 0x52, 0x06, 0x70,
	0x61, 0x72, 0x73, 0x65, 0x64, 0x12, 0x39, 0x0a, 0x03, 0x72, 0x61, 0x77, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x62, 0x72, 0x69, 0x64, 0x67, 0x72, 0x2e,
	0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x52, 0x61, 0x77, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x48, 0x00, 0x52, 0x03, 0x72, 0x61, 0x77,
	0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x0e, 0x0a, 0x0c, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x2a, 0x41, 0x0a, 0x04, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x53, 0x4d, 0x53, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4e,
	0x4f, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x02, 0x2a, 0x4a, 0x0a,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x48, 0x45, 0x41, 0x4c, 0x54, 0x48,
	0x59, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e,
	0x48, 0x45, 0x41, 0x4c, 0x54, 0x48, 0x59, 0x10, 0x02, 0x2a, 0x5e, 0x0a, 0x08, 0x50, 0x72, 0x69,
	0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x14, 0x50, 0x52, 0x49, 0x4f, 0x52, 0x49, 0x54,
	0x59, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x10, 0x0a, 0x0c, 0x50, 0x52, 0x49, 0x4f, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x4c, 0x4f, 0x57, 0x10,
	0x01, 0x12, 0x13, 0x0a, 0x0f, 0x50, 0x52, 0x49, 0x4f, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x4d, 0x45,
	0x44, 0x49, 0x55, 0x4d, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x50, 0x52, 0x49, 0x4f, 0x52, 0x49,
	0x54, 0x59, 0x5f, 0x48, 0x49, 0x47, 0x48, 0x10, 0x03, 0x32, 0x80, 0x01, 0x0a, 0x0d, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x6f, 0x0a, 0x0a, 0x53,
	0x65, 0x6e, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x2d, 0x2e, 0x62, 0x66, 0x66, 0x2e,
	0x62, 0x72, 0x69, 0x64, 0x67, 0x72, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x62,
	0x72, 0x69, 0x64, 0x67, 0x72, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x28, 0x01, 0x30, 0x01, 0x42, 0x98, 0x02, 0x0a,
	0x2c, 0x61, 0x69, 0x2e, 0x70, 0x6f, 0x70, 0x62, 0x65, 0x72, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x62, 0x66, 0x66, 0x2e, 0x62, 0x72, 0x69, 0x64, 0x67, 0x72, 0x2e, 0x72, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x42, 0x0c, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x4f, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x6f, 0x70, 0x62, 0x65, 0x72,
	0x72, 0x79, 0x2d, 0x61, 0x69, 0x2f, 0x70, 0x6f, 0x70, 0x62, 0x65, 0x72, 0x72, 0x79, 0x2d, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x62, 0x66, 0x66, 0x2f, 0x62, 0x72, 0x69, 0x64, 0x67, 0x72, 0x2f,
	0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x3b,
	0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0xa2, 0x02,
	0x03, 0x42, 0x42, 0x52, 0xaa, 0x02, 0x1a, 0x42, 0x66, 0x66, 0x2e, 0x42, 0x72, 0x69, 0x64, 0x67,
	0x72, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0xca, 0x02, 0x1a, 0x42, 0x66, 0x66, 0x5c, 0x42, 0x72, 0x69, 0x64, 0x67, 0x72, 0x5c, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x5c, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0xe2, 0x02,
	0x26, 0x42, 0x66, 0x66, 0x5c, 0x42, 0x72, 0x69, 0x64, 0x67, 0x72, 0x5c, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x5c, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x1d, 0x42, 0x66, 0x66, 0x3a, 0x3a, 0x42,
	0x72, 0x69, 0x64, 0x67, 0x72, 0x3a, 0x3a, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x3a, 0x3a, 0x56,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_bff_bridgr_record_v1alpha1_message_proto_rawDescOnce sync.Once
	file_bff_bridgr_record_v1alpha1_message_proto_rawDescData = file_bff_bridgr_record_v1alpha1_message_proto_rawDesc
)

func file_bff_bridgr_record_v1alpha1_message_proto_rawDescGZIP() []byte {
	file_bff_bridgr_record_v1alpha1_message_proto_rawDescOnce.Do(func() {
		file_bff_bridgr_record_v1alpha1_message_proto_rawDescData = protoimpl.X.CompressGZIP(file_bff_bridgr_record_v1alpha1_message_proto_rawDescData)
	})
	return file_bff_bridgr_record_v1alpha1_message_proto_rawDescData
}

var file_bff_bridgr_record_v1alpha1_message_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_bff_bridgr_record_v1alpha1_message_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_bff_bridgr_record_v1alpha1_message_proto_goTypes = []any{
	(Type)(0),                     // 0: bff.bridgr.record.v1alpha1.Type
	(Status)(0),                   // 1: bff.bridgr.record.v1alpha1.Status
	(Priority)(0),                 // 2: bff.bridgr.record.v1alpha1.Priority
	(*SendRecordRequest)(nil),     // 3: bff.bridgr.record.v1alpha1.SendRecordRequest
	(*SendRecordResponse)(nil),    // 4: bff.bridgr.record.v1alpha1.SendRecordResponse
	(*ParsedRecord)(nil),          // 5: bff.bridgr.record.v1alpha1.ParsedRecord
	(*RawRecord)(nil),             // 6: bff.bridgr.record.v1alpha1.RawRecord
	(*Record)(nil),                // 7: bff.bridgr.record.v1alpha1.Record
	nil,                           // 8: bff.bridgr.record.v1alpha1.ParsedRecord.MetadataEntry
	(*timestamppb.Timestamp)(nil), // 9: google.protobuf.Timestamp
}
var file_bff_bridgr_record_v1alpha1_message_proto_depIdxs = []int32{
	7,  // 0: bff.bridgr.record.v1alpha1.SendRecordRequest.record:type_name -> bff.bridgr.record.v1alpha1.Record
	2,  // 1: bff.bridgr.record.v1alpha1.ParsedRecord.priority:type_name -> bff.bridgr.record.v1alpha1.Priority
	8,  // 2: bff.bridgr.record.v1alpha1.ParsedRecord.metadata:type_name -> bff.bridgr.record.v1alpha1.ParsedRecord.MetadataEntry
	9,  // 3: bff.bridgr.record.v1alpha1.ParsedRecord.timestamp:type_name -> google.protobuf.Timestamp
	9,  // 4: bff.bridgr.record.v1alpha1.RawRecord.timestamp:type_name -> google.protobuf.Timestamp
	0,  // 5: bff.bridgr.record.v1alpha1.Record.type:type_name -> bff.bridgr.record.v1alpha1.Type
	1,  // 6: bff.bridgr.record.v1alpha1.Record.status:type_name -> bff.bridgr.record.v1alpha1.Status
	5,  // 7: bff.bridgr.record.v1alpha1.Record.parsed:type_name -> bff.bridgr.record.v1alpha1.ParsedRecord
	6,  // 8: bff.bridgr.record.v1alpha1.Record.raw:type_name -> bff.bridgr.record.v1alpha1.RawRecord
	9,  // 9: bff.bridgr.record.v1alpha1.Record.timestamp:type_name -> google.protobuf.Timestamp
	3,  // 10: bff.bridgr.record.v1alpha1.RecordService.SendRecord:input_type -> bff.bridgr.record.v1alpha1.SendRecordRequest
	4,  // 11: bff.bridgr.record.v1alpha1.RecordService.SendRecord:output_type -> bff.bridgr.record.v1alpha1.SendRecordResponse
	11, // [11:12] is the sub-list for method output_type
	10, // [10:11] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_bff_bridgr_record_v1alpha1_message_proto_init() }
func file_bff_bridgr_record_v1alpha1_message_proto_init() {
	if File_bff_bridgr_record_v1alpha1_message_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_bff_bridgr_record_v1alpha1_message_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*SendRecordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_bridgr_record_v1alpha1_message_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*SendRecordResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_bridgr_record_v1alpha1_message_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*ParsedRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_bridgr_record_v1alpha1_message_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*RawRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bff_bridgr_record_v1alpha1_message_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*Record); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_bff_bridgr_record_v1alpha1_message_proto_msgTypes[3].OneofWrappers = []any{}
	file_bff_bridgr_record_v1alpha1_message_proto_msgTypes[4].OneofWrappers = []any{
		(*Record_Parsed)(nil),
		(*Record_Raw)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bff_bridgr_record_v1alpha1_message_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_bff_bridgr_record_v1alpha1_message_proto_goTypes,
		DependencyIndexes: file_bff_bridgr_record_v1alpha1_message_proto_depIdxs,
		EnumInfos:         file_bff_bridgr_record_v1alpha1_message_proto_enumTypes,
		MessageInfos:      file_bff_bridgr_record_v1alpha1_message_proto_msgTypes,
	}.Build()
	File_bff_bridgr_record_v1alpha1_message_proto = out.File
	file_bff_bridgr_record_v1alpha1_message_proto_rawDesc = nil
	file_bff_bridgr_record_v1alpha1_message_proto_goTypes = nil
	file_bff_bridgr_record_v1alpha1_message_proto_depIdxs = nil
}
